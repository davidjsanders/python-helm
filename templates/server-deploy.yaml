apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: cowbull-{{ template "cowbull.fullname" . }}-dep
#  name: cowbull-dep
spec:
  replicas: {{ .Values.appserver.replicas }}
  template: # create pods using pod definition in this template
    metadata:
      labels:
        app: cowbull-{{ template "cowbull.fullname" . }}-srv
        run: cowbull
        tier: frontend
    spec:
      containers:
      - name: cowbull
        image: {{ printf "%s:%s" .Values.appserver.image .Values.appserver.imagetag }}
#        imagePullPolicy: Always
        env:
        - name: "LOGGING_LEVEL"
          value: "{{ .Values.webapp.logging_level }}"
        - name: "COWBULL_CONFIG"
          value: "/cowbull/config/cowbull.cfg"
        resources:
          requests:
            cpu: {{ .Values.appserver.cpu }}
            memory: {{ .Values.appserver.memory }}
        volumeMounts:
        - name: config-{{ template "cowbull.fullname" . }}-volume
          mountPath: /cowbull/config/
        - name: gcp-credentials
          mountPath: /cowbull/secrets/
        ports:
        - containerPort: 8080
      initContainers:
      - name: init-cowbull-server
        image: busybox
        command: ['sh', '-c', 'if [ -e /cowbull-init/init.sh ]; then source /cowbull-init/init.sh; fi']
        volumeMounts:
        - mountPath: /cowbull-init
          name: cowbull-{{ template "cowbull.fullname" . }}-init
      volumes:
      - name: cowbull-{{ template "cowbull.fullname" . }}-init
        configMap:
          name: cowbull-{{ template "cowbull.fullname" . }}-init-config
          optional: true
          items:
          - key: init.sh
            path: init.sh
      - name: config-{{ template "cowbull.fullname" . }}-volume
        configMap:
          name: cowbull-{{ template "cowbull.fullname" . }}-config
          items:
          - key: cowbull.cfg
            path: cowbull.cfg
      - name: gcp-credentials
        secret:
          secretName: gcp-credentials
          optional: true